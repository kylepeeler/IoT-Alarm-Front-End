{"version":3,"sources":["components/AppHeader.js","components/Module.js","helpers/displayColors.js","helpers/apiHelpers.js","components/TimeSettingsForm.js","components/DateSettingsForm.js","components/NextAlarmSettingsForm.js","components/WeatherSettingsForm.js","components/TextSettingsForm.js","helpers/toUpper.js","components/ModuleListColumn.js","components/ModuleList.js","pages/ModuleSettings.js","App.js","serviceWorker.js","index.js"],"names":["withStyles","root","flexGrow","grow","menuButton","marginLeft","marginRight","props","react_default","a","createElement","className","classes","index_es","position","variant","color","Button_default","component","Link","to","Module","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","handleOpenSettings","setState","settingsOpen","handleClose","state","_this2","react_beautiful_dnd_esm","draggableId","apiName","index","provided","snapshot","assign","draggableProps","ref","innerRef","ListItem_default","style","isDragging","backgroundColor","dragHandleProps","ListItemIcon_default","icons_index_es","ListItemText_default","primary","displayName","active","ListItemSecondaryAction_default","IconButton_default","aria-label","onClick","Modal_default","aria-labelledby","aria-describedby","open","onClose","top","left","transform","paper","React","cloneElement","children","closeModal","Component","theme","width","spacing","unit","palette","background","boxShadow","shadows","padding","displayColors","BASE_URL","window","location","hostname","patchData","url","data","arguments","length","undefined","console","log","fetch","method","headers","Content-Type","cache","body","JSON","stringify","then","response","json","updateStateFromAPI","thisRef","apiKey","objectSpread","TimeSettingsForm","handleUpdateSettings","handleChangeColor","rgb","handleChangeFormat","event","format24","target","checked","r","g","b","modal","FormLabel_default","FormGroup_default","FormControlLabel_default","control","Switch_default","onChange","value","label","colorHeader","lib","colors","button","fullWidth","margin","marginTop","marginBottom","DateSettingsForm","handleChangeShowFullDate","showFullDate","NextAlarmSettingsForm","handleChangeDisplayFormat","displayAsCountdown","WeatherSettingsForm","handleChangeCity","city","TextField_default","id","textField","TextSettingsForm","escapedPayloadText","text","replace","handleChangeText","helperText","toUppercase","string","charAt","toUpperCase","slice","ModuleListColumn","item","xs","sm","columnId","droppableId","droppableProps","RootRef_default","rootRef","List_default","minHeight","modules","map","moduleName","components_Module","key","indexes","components_TimeSettingsForm","components_NextAlarmSettingsForm","components_DateSettingsForm","components_WeatherSettingsForm","components_TextSettingsForm","getSettingsPaneforModule","bottom","placeholder","textAlign","secondary","ModuleList","getModules","moduleId","getActiveModules","getInactiveModules","keys","filter","sort","onDragEnd","result","destination","source","newState","defineProperty","newModules","splice","forEach","indexOf","time","nextalarm","date","weather","columnOrder","_this3","container","components_ModuleListColumn","demo","components_ModuleList","Alarms","main","breakpoints","down","_ref","BrowserRouter","react","components_AppHeader","Route","path","exact","ModuleSettings","Boolean","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.a649640a.chunk.js","sourcesContent":["import React from \"react\";\nimport { AppBar, Toolbar, Typography } from \"@material-ui/core\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport Button from \"@material-ui/core/Button\";\nimport { Link } from \"react-router-dom\";\n\nconst styles = {\n  root: {\n    flexGrow: 1\n  },\n  grow: {\n    flexGrow: 1\n  },\n  menuButton: {\n    marginLeft: -12,\n    marginRight: 20\n  }\n};\n\nconst AppHeader = props => (\n  <div className={props.classes.root}>\n    <AppBar position=\"static\">\n      <Toolbar>\n        <Typography\n          variant=\"title\"\n          color=\"inherit\"\n          className={props.classes.grow}\n        >\n          IoT Alarm Clock\n        </Typography>\n        <Button color=\"inherit\" component={Link} to=\"/\">\n          Modules\n        </Button>\n        <Button color=\"inherit\" component={Link} to=\"/alarms\">\n          Alarms\n        </Button>\n      </Toolbar>\n    </AppBar>\n  </div>\n);\n\nexport default withStyles(styles)(AppHeader);\n","import React from \"react\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport { DragHandle, Settings } from \"@material-ui/icons\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport ListItemSecondaryAction from \"@material-ui/core/ListItemSecondaryAction\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Modal from \"@material-ui/core/Modal\";\nimport { Draggable } from \"react-beautiful-dnd\";\n\nconst styles = theme => ({\n  paper: {\n    position: \"absolute\",\n    width: theme.spacing.unit * 50,\n    backgroundColor: theme.palette.background.paper,\n    boxShadow: theme.shadows[5],\n    padding: theme.spacing.unit * 4\n  }\n});\n\nclass Module extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      settingsOpen: false\n    };\n  }\n\n  handleOpenSettings = () => {\n    this.setState({ settingsOpen: true });\n  };\n\n  handleClose = () => {\n    this.setState({ settingsOpen: false });\n  };\n\n\n\n  render() {\n    const { props } = this;\n\n    return (\n      <Draggable draggableId={props.apiName} index={props.index}>\n        {(provided, snapshot) => (\n          <div {...provided.draggableProps} ref={provided.innerRef}>\n            <ListItem\n              style={\n                snapshot.isDragging\n                  ? { backgroundColor: \"#f5f5f5\" }\n                  : { backgroundColor: \"white\" }\n              }\n            >\n              <div {...provided.dragHandleProps}>\n                <ListItemIcon>\n                  <DragHandle />\n                </ListItemIcon>\n              </div>\n              <ListItemText primary={props.displayName || props.apiName} />\n              {props.active && (\n                <ListItemSecondaryAction>\n                  <IconButton\n                    aria-label=\"Open Settings\"\n                    onClick={this.handleOpenSettings}\n                  >\n                    <Settings />\n                  </IconButton>\n                </ListItemSecondaryAction>\n              )}\n            </ListItem>\n            <Modal\n              aria-labelledby=\"simple-modal-title\"\n              aria-describedby=\"simple-modal-description\"\n              open={this.state.settingsOpen}\n              onClose={this.handleClose}\n            >\n              <div\n                style={{\n                  top: \"50%\",\n                  left: \"50%\",\n                  transform: \"translate(-50%, -50%)\",\n                  backgroundColor: \"#f5f5f5\"\n                }}\n                className={props.classes.paper}\n              >\n                {React.cloneElement(props.children, { closeModal: this.handleClose })}\n              </div>\n            </Modal>\n          </div>\n        )}\n      </Draggable>\n    );\n  }\n}\n\nexport default withStyles(styles)(Module);\n","let displayColors = [\n  \"#f44336\",\n  \"#e91e63\",\n  \"#9c27b0\",\n  \"#673ab7\",\n  \"#3f51b5\",\n  \"#2196f3\",\n  \"#03a9f4\",\n  \"#00bcd4\",\n  \"#009688\",\n  \"#4caf50\",\n  \"#8bc34a\",\n  \"#cddc39\",\n  \"#ffeb3b\",\n  \"#ffc107\",\n  \"#ff9800\",\n  \"#ff5722\",\n  \"#795548\",\n  \"#ffffff\"\n];\n\nexport default displayColors;\n","const BASE_URL = \"http://\" + window.location.hostname + \":3000\";\n\nfunction patchData(url, data = {}) {\n    //console.log(JSON.stringify(data));\n    console.log('patching', data);\n    return fetch(BASE_URL + '/' + url, {\n        method: \"PATCH\", // *GET, POST, PUT, DELETE, etc.\n        headers: {\n            \"Content-Type\": \"application/json; charset=utf-8\",\n        },\n        cache: \"no-cache\", // *default, no-cache, reload, force-cache, only-if-cached\n        body: JSON.stringify(data), // body data type must match \"Content-Type\" header\n    })\n    .then(response => response.json()); // parses response to JSON\n}\n\nfunction updateStateFromAPI(thisRef){\n    fetch(BASE_URL + '/' + thisRef.props.apiKey, {\n        cache: \"no-cache\",\n    })\n        .then(response => response.json())\n        .then(data => {\n            console.log('got', data[0]);\n            thisRef.setState({ ...data[0] })\n        });\n}\n\nexport {\n    BASE_URL,\n    patchData,\n    updateStateFromAPI\n}","import React from \"react\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport Button from \"@material-ui/core/Button\";\nimport FormLabel from \"@material-ui/core/FormLabel\";\nimport FormGroup from \"@material-ui/core/FormGroup\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport Switch from \"@material-ui/core/Switch\";\nimport { CirclePicker } from \"react-color\";\nimport displayColors from \"../helpers/displayColors\";\nimport { patchData, updateStateFromAPI } from \"../helpers/apiHelpers\";\n\nconst styles = theme => ({\n  button: {\n    margin: theme.spacing.unit,\n    marginTop: \"30px\"\n  },\n  colorHeader: {\n    marginBottom: \"5px\"\n  },\n  modal: {\n    backgroundColor: \"#f5f5f5\"\n  }\n});\n\nclass TimeSettingsForm extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      color: {\n        r: 255,\n        g: 255,\n        b: 255\n      },\n      format24: false\n    };\n  }\n  componentDidMount() {\n    updateStateFromAPI(this)\n  }\n\n  handleUpdateSettings = () => {\n    console.log('handled updated settings');\n    patchData(this.props.apiKey, {...this.state});\n    this.props.closeModal();\n  }\n\n  handleChangeColor = color => {\n    this.setState({ color: color.rgb });\n  };\n\n  handleChangeFormat = event => {\n    this.setState({ format24: event.target.checked });\n  };\n\n  render() {\n    const { classes } = this.props;\n\n    return (\n      <div className={classes.modal}>\n        <FormLabel component=\"legend\">Display Format</FormLabel>\n        <FormGroup>\n          <FormControlLabel\n            control={\n              <Switch\n                checked={this.state.format24}\n                onChange={this.handleChangeFormat}\n                value=\"format24\"\n              />\n            }\n            label=\"Display as 24-hour time?\"\n          />\n          <FormLabel variant=\"subtitle2\" className={classes.colorHeader}>\n            Display Color\n          </FormLabel>\n          <CirclePicker\n            colors={displayColors}\n            onChange={this.handleChangeColor}\n            color={this.state.color}\n          />\n        </FormGroup>\n\n        <Button\n          variant=\"contained\"\n          color=\"primary\"\n          className={classes.button}\n          fullWidth\n          onClick={this.handleUpdateSettings}\n\n        >\n          Update\n        </Button>\n      </div>\n    );\n  }\n}\nexport default withStyles(styles)(TimeSettingsForm);\n","import React from \"react\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport Button from \"@material-ui/core/Button\";\nimport FormLabel from \"@material-ui/core/FormLabel\";\nimport FormGroup from \"@material-ui/core/FormGroup\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport Switch from \"@material-ui/core/Switch\";\nimport { CirclePicker } from \"react-color\";\nimport displayColors from \"../helpers/displayColors\";\nimport {patchData, updateStateFromAPI } from \"../helpers/apiHelpers\";\n\nconst styles = theme => ({\n  button: {\n    margin: theme.spacing.unit,\n    marginTop: \"30px\"\n  },\n  colorHeader: {\n    marginBottom: \"5px\"\n  },\n  modal: {\n    backgroundColor: \"#f5f5f5\"\n  }\n});\n\nclass DateSettingsForm extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      color: {\n        r: 255,\n        g: 255,\n        b: 255\n      },\n      showFullDate: false\n    };\n  }\n\n  componentDidMount() {\n    updateStateFromAPI(this);\n  }\n\n  handleChangeColor = color => {\n    this.setState({ color: color.rgb });\n  };\n\n  handleChangeShowFullDate = event => {\n    this.setState({ showFullDate: event.target.checked });\n  };\n\n  handleUpdateSettings = () => {\n    console.log('handled updated settings');\n    patchData(this.props.apiKey, { ...this.state });\n    this.props.closeModal();\n  }\n\n  render() {\n    const { classes } = this.props;\n\n    return (\n      <div className={classes.modal}>\n        <FormLabel component=\"legend\">Display Format</FormLabel>\n        <FormGroup>\n          <FormControlLabel\n            control={\n              <Switch\n                checked={this.state.showFullDate}\n                onChange={this.handleChangeShowFullDate}\n                value={this.state.showFullDate}\n              />\n            }\n            label=\"Show the full date with words? (e.g. Tuesday, July 2nd, 2019)\"\n          />\n          <FormLabel variant=\"subtitle2\" className={classes.colorHeader}>\n            Display Color\n          </FormLabel>\n          <CirclePicker\n            colors={displayColors}\n            onChange={this.handleChangeColor}\n            color={this.state.color}\n          />\n        </FormGroup>\n\n        <Button\n          variant=\"contained\"\n          color=\"primary\"\n          className={classes.button}\n          fullWidth\n          onClick={this.handleUpdateSettings}\n        >\n          Update\n        </Button>\n      </div>\n    );\n  }\n}\nexport default withStyles(styles)(DateSettingsForm);\n","import React from \"react\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport Button from \"@material-ui/core/Button\";\nimport FormLabel from \"@material-ui/core/FormLabel\";\nimport FormGroup from \"@material-ui/core/FormGroup\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport Switch from \"@material-ui/core/Switch\";\nimport { CirclePicker } from \"react-color\";\nimport displayColors from \"../helpers/displayColors\";\nimport { patchData, updateStateFromAPI } from \"../helpers/apiHelpers\";\n\nconst styles = theme => ({\n  button: {\n    margin: theme.spacing.unit,\n    marginTop: \"30px\"\n  },\n  colorHeader: {\n    marginBottom: \"5px\"\n  },\n  modal: {\n    backgroundColor: \"#f5f5f5\"\n  }\n});\n\nclass NextAlarmSettingsForm extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      color: {\n        r: 255,\n        g: 255,\n        b: 255\n      },\n      displayAsCountdown: false\n    };\n  }\n\n  componentDidMount() {\n    updateStateFromAPI(this)\n  }\n\n  handleUpdateSettings = () => {\n    console.log('handled updated settings');\n    patchData(this.props.apiKey, {...this.state});\n    this.props.closeModal();\n  }\n\n  handleChangeColor = color => {\n    this.setState({ color: color.rgb });\n  };\n\n  handleChangeDisplayFormat = event => {\n    this.setState({ displayAsCountdown: event.target.checked });\n  };\n\n  render() {\n    const { classes } = this.props;\n\n    return (\n      <div className={classes.modal}>\n        <FormLabel component=\"legend\">Display Format</FormLabel>\n        <FormGroup>\n          <FormControlLabel\n            control={\n              <Switch\n                checked={this.state.displayAsCountdown}\n                onChange={this.handleChangeDisplayFormat}\n                value=\"displayAsCountdown\"\n              />\n            }\n            label=\"Display as countdown until next alarm?\"\n          />\n          <FormLabel variant=\"subtitle2\" className={classes.colorHeader}>\n            Display Color\n          </FormLabel>\n          <CirclePicker\n            colors={displayColors}\n            onChange={this.handleChangeColor}\n            color={this.state.color}\n          />\n        </FormGroup>\n\n        <Button\n          variant=\"contained\"\n          color=\"primary\"\n          className={classes.button}\n          fullWidth\n          onClick={this.handleUpdateSettings}\n        >\n          Update\n        </Button>\n      </div>\n    );\n  }\n}\nexport default withStyles(styles)(NextAlarmSettingsForm);\n","import React from \"react\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport Button from \"@material-ui/core/Button\";\nimport FormLabel from \"@material-ui/core/FormLabel\";\nimport FormGroup from \"@material-ui/core/FormGroup\";\nimport TextField from \"@material-ui/core/TextField\";\nimport { CirclePicker } from \"react-color\";\nimport displayColors from \"../helpers/displayColors\";\nimport { patchData, updateStateFromAPI } from \"../helpers/apiHelpers\";\n\nconst styles = theme => ({\n  button: {\n    margin: theme.spacing.unit,\n    marginTop: \"30px\"\n  },\n  colorHeader: {\n    marginBottom: \"5px\"\n  },\n  modal: {\n    backgroundColor: \"#f5f5f5\"\n  },\n  textField: {\n    marginBottom: \"10px\"\n  }\n});\n\nclass WeatherSettingsForm extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      color: {\n        r: 255,\n        g: 255,\n        b: 255\n      },\n      city: \"Indianapolis\"\n    };\n  }\n\n  componentDidMount() {\n    updateStateFromAPI(this)\n  }\n\n  handleUpdateSettings = () => {\n    console.log('handled updated settings');\n    patchData(this.props.apiKey, { ...this.state });\n    this.props.closeModal();\n  }\n\n  handleChangeColor = color => {\n    this.setState({ color: color.rgb });\n  };\n\n  handleChangeCity = event => {\n    this.setState({ city: event.target.value });\n  };\n\n  render() {\n    const { classes } = this.props;\n\n    return (\n      <div className={classes.modal}>\n        <FormGroup>\n          <TextField\n            id=\"city\"\n            label=\"City\"\n            className={classes.textField}\n            value={this.state.city}\n            onChange={this.handleChangeCity}\n            margin=\"normal\"\n          />\n          <FormLabel variant=\"subtitle2\" className={classes.colorHeader}>\n            Display Color\n          </FormLabel>\n          <CirclePicker\n            colors={displayColors}\n            onChange={this.handleChangeColor}\n            color={this.state.color}\n          />\n        </FormGroup>\n\n        <Button\n          variant=\"contained\"\n          color=\"primary\"\n          className={classes.button}\n          fullWidth\n          onClick={this.handleUpdateSettings}\n        >\n          Update\n        </Button>\n      </div>\n    );\n  }\n}\nexport default withStyles(styles)(WeatherSettingsForm);\n","import React from \"react\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport Button from \"@material-ui/core/Button\";\nimport FormLabel from \"@material-ui/core/FormLabel\";\nimport FormGroup from \"@material-ui/core/FormGroup\";\nimport TextField from \"@material-ui/core/TextField\";\nimport { CirclePicker } from \"react-color\";\nimport displayColors from \"../helpers/displayColors\";\nimport {patchData, updateStateFromAPI } from \"../helpers/apiHelpers\";\n\nconst styles = theme => ({\n  button: {\n    margin: theme.spacing.unit,\n    marginTop: \"30px\"\n  },\n  colorHeader: {\n    marginBottom: \"5px\"\n  },\n  modal: {\n    backgroundColor: \"#f5f5f5\"\n  },\n  textField: {\n    marginBottom: \"10px\"\n  }\n});\n\nclass TextSettingsForm extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      color: {\n        r: 255,\n        g: 255,\n        b: 255\n      },\n      text: \"Text to display\"\n    };\n  }\n\n  handleUpdateSettings = () => {\n    console.log('handled updated settings');\n    var payloadText = this.state.text;\n    var escapedPayloadText = payloadText.replace(/\\\\n/g, \"\\\\n\")\n      .replace(/\\\\'/g, \"\\\\'\")\n      .replace(/\\\\\"/g, '\\\\\"')\n      .replace(/\\\\&/g, \"\\\\&\")\n      .replace(/\\\\r/g, \"\\\\r\")\n      .replace(/\\\\t/g, \"\\\\t\")\n      .replace(/\\\\b/g, \"\\\\b\")\n      .replace(/\\\\f/g, \"\\\\f\");\n    patchData(this.props.apiKey, {...this.state, text: escapedPayloadText});\n    this.props.closeModal();\n  }\n\n  componentDidMount() {\n    updateStateFromAPI(this);\n  }\n\n  handleChangeColor = color => {\n    this.setState({ color: color.rgb });\n  };\n\n  handleChangeText = event => {\n    this.setState({ text: event.target.value });\n  };\n\n  render() {\n    const { classes } = this.props;\n\n    return (\n      <div className={classes.modal}>\n        <FormGroup>\n          <TextField\n            id=\"text\"\n            label=\"Text\"\n            className={classes.textField}\n            value={this.state.text}\n            onChange={this.handleChangeText}\n            margin=\"normal\"\n            helperText=\"Text will continously scroll.\"\n          />\n          <FormLabel variant=\"subtitle2\" className={classes.colorHeader}>\n            Display Color\n          </FormLabel>\n          <CirclePicker\n            colors={displayColors}\n            onChange={this.handleChangeColor}\n            color={this.state.color}\n          />\n        </FormGroup>\n\n        <Button\n          variant=\"contained\"\n          color=\"primary\"\n          className={classes.button}\n          fullWidth          \n          onClick={this.handleUpdateSettings}\n        >\n          Update\n        </Button>\n      </div>\n    );\n  }\n}\nexport default withStyles(styles)(TextSettingsForm);\n","function toUppercase(string) {\n  return string.charAt(0).toUpperCase() + string.slice(1);\n}\n\nexport default toUppercase;\n","import React from \"react\";\nimport { Paper, Grid, Typography } from \"@material-ui/core\";\nimport List from \"@material-ui/core/List\";\nimport Module from \"../components/Module\";\nimport TimeSettingsForm from \"../components/TimeSettingsForm\";\nimport DateSettingsForm from \"../components/DateSettingsForm\";\nimport NextAlarmSettingsForm from \"../components/NextAlarmSettingsForm\";\nimport WeatherSettingsForm from \"../components/WeatherSettingsForm\";\nimport TextSettingsForm from \"../components/TextSettingsForm\";\nimport toUppercase from \"../helpers/toUpper\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport { Droppable } from \"react-beautiful-dnd\";\nimport RootRef from \"@material-ui/core/RootRef\";\n\nconst styles = theme => ({\n  paper: {\n    textAlign: \"center\",\n    color: theme.palette.text.secondary\n  }\n});\n\nconst getSettingsPaneforModule = moduleName => {\n  switch (moduleName) {\n    case \"time\":\n      return <TimeSettingsForm apiKey={moduleName} />;\n    case \"nextalarm\":\n      return <NextAlarmSettingsForm apiKey={moduleName} />;\n    case \"date\":\n      return <DateSettingsForm apiKey={moduleName} />;\n    case \"weather\":\n      return <WeatherSettingsForm apiKey={moduleName} />;\n    case \"text\":\n      return <TextSettingsForm apiKey={moduleName} />;\n    default:\n      return null;\n  }\n};\n\nclass ModuleListColumn extends React.Component {\n  //   constructor(props) {\n  //     super(props);\n  //   }\n\n  render() {\n    const { props } = this;\n\n    return (\n      <Grid item xs={12} sm={6}>\n        <Typography variant=\"h6\">{toUppercase(props.columnId)}</Typography>\n        <Droppable droppableId={props.columnId}>\n          {provided => (\n            <Paper className={props.classes.paper} {...provided.droppableProps}>\n              <RootRef rootRef={provided.innerRef}>\n                <List style={{ minHeight: \"60px\" }}>\n                  {props.modules.map(moduleName => {\n                    //TODO: fix hack to get next alarm to be two words, change the API name or create a map of api names to module names (for only one??)\n                    return (\n                      <Module\n                        apiName={moduleName}\n                        displayName={\n                          moduleName === \"nextalarm\"\n                            ? \"Next Alarm\"\n                            : toUppercase(moduleName)\n                        }\n                        active={props.columnId === \"active\" ? true : false}\n                        key={moduleName}\n                        index={props.indexes[moduleName]}\n                      >\n                        {getSettingsPaneforModule(moduleName)}\n                      </Module>\n                    );\n                  })}\n                </List>\n              </RootRef>\n              {props.modules.length === 0 ? (\n                <Typography\n                  variant=\"body2\"\n                  style={{ position: \"relative\", bottom: \"30px\" }}\n                >\n                  {\"Drag modules here to add them to the alarm clock.\"}\n                </Typography>\n              ) : (\n                \"\"\n              )}\n              {provided.placeholder}\n            </Paper>\n          )}\n        </Droppable>\n      </Grid>\n    );\n  }\n}\n\nexport default withStyles(styles)(ModuleListColumn);\n","import React from \"react\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport { Grid } from \"@material-ui/core\";\nimport ModuleListColumn from \"./ModuleListColumn\";\nimport { DragDropContext } from \"react-beautiful-dnd\";\nimport { BASE_URL, patchData } from '../helpers/apiHelpers';\n\nconst styles = theme => ({\n  paper: {\n    textAlign: \"center\",\n    color: theme.palette.text.secondary\n  }\n});\n\nclass ModuleList extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      modules: {\n        time: -1,\n        nextalarm: -1,\n        date: -1,\n        weather: -1,\n        text: -1\n      },\n      columnOrder: [\"active\", \"inactive\"]\n    };\n  }\n  \n  componentDidMount() {\n    fetch(BASE_URL + '/modules', {\n      cache: \"no-cache\", // *default, no-cache, reload, force-cache, only-if-cached\n      })\n      .then(response => response.json())\n      .then(data => {\n        console.log(data);\n        this.setState({ modules: data })\n      });\n  }\n\n  getModules = moduleId => {\n    if (moduleId === \"active\") {\n      return this.getActiveModules(this.state.modules);\n    } else if (moduleId === \"inactive\") {\n      return this.getInactiveModules(this.state.modules);\n    } else return null;\n  };\n\n  getActiveModules = modules => {\n    return Object.keys(modules)\n      .filter(key => {\n        return modules[key] >= 0 && modules[key] <= 3;\n      })\n      .sort((a, b) => {\n        return modules[a] - modules[b];\n      });\n  };\n\n  getInactiveModules = modules => {\n    return Object.keys(modules).filter(value => {\n      return modules[value] < 0 || modules[value] > 3;\n    });\n  };\n\n  onDragEnd = result => {\n    // TODO: reorder our column\n    const { destination, source, draggableId } = result;\n    if (!destination) {\n      return;\n    }\n    if (\n      destination.droppableId === source.droppableId &&\n      destination.index === source.index\n    ) {\n      return;\n    }\n    if (destination.droppableId === \"inactive\") {\n      //Set the state as inactive\n      var newState = {\n        ...this.state.modules,\n        [draggableId]: -1\n      };\n      this.setState({\n        modules: newState\n      }, () => {\n        console.log({ ...this.state.modules });\n        patchData('modules', { ...this.state.modules })\n      });\n    }\n\n    if (\n      //Inactive -> Active, Cancel the drag if we already have 4 active modules\n      destination.droppableId === \"active\" &&\n      source.droppableId === \"inactive\" &&\n      this.getActiveModules(this.state.modules).length === 4\n    ) {\n      return;\n    } else if (\n      //Else we are moving from Inactive -> Active\n      destination.droppableId === \"active\" &&\n      source.droppableId === \"inactive\" &&\n      this.getActiveModules(this.state.modules).length < 4\n    ) {\n      let newModules = this.getActiveModules(this.state.modules);\n      newModules.splice(destination.index, 0, draggableId);\n      let newState = {\n        ...this.state.modules\n      };\n      newModules.forEach(moduleName => {\n        newState[moduleName] = newModules.indexOf(moduleName);\n      });\n      this.setState({ modules: newState }, () => {\n        console.log({ ...this.state.modules });\n        patchData('modules', { ...this.state.modules })\n      });\n    }\n\n    if (\n      // Reordering within Active Modules\n      destination.droppableId === \"active\" &&\n      source.droppableId === \"active\"\n    ) {\n      let newModules = this.getActiveModules(this.state.modules);\n      newModules.splice(source.index, 1);\n      newModules.splice(destination.index, 0, draggableId);\n      let newState = {\n        ...this.state.modules\n      };\n      newModules.forEach(moduleName => {\n        newState[moduleName] = newModules.indexOf(moduleName);\n      });\n      this.setState({ modules: newState }, ()=>{\n          console.log({...this.state.modules});\n          patchData('modules', { ...this.state.modules })\n      });\n    }\n\n     \n    //TODO: update position on the server\n  };\n\n  render() {\n    return (\n      <Grid container spacing={24}>\n        <DragDropContext onDragEnd={this.onDragEnd}>\n          {this.state.columnOrder.map(columnId => {\n            const modules = this.getModules(columnId);\n            return (\n              <ModuleListColumn\n                modules={modules}\n                columnId={columnId}\n                key={columnId}\n                indexes={this.state.modules}\n              />\n            );\n          })}\n        </DragDropContext>\n      </Grid>\n    );\n  }\n}\n\nexport default withStyles(styles)(ModuleList);\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport { Typography } from \"@material-ui/core\";\nimport ModuleList from \"../components/ModuleList\";\n\nconst styles = theme => ({\n  root: {\n    flexGrow: 1\n  },\n  demo: {\n    backgroundColor: theme.palette.background.paper\n  }\n});\n\nfunction ModuleSettings(props) {\n  const { classes } = props;\n\n  return (\n    <div className={classes.root}>\n      <Typography variant=\"subtitle1\">\n        Drag modules from inactive to active to display it on your alarm. You\n        can only have 4 active modules at a time.\n      </Typography>\n      <br />\n      <ModuleList />\n    </div>\n  );\n}\n\nModuleSettings.propTypes = {\n  classes: PropTypes.object.isRequired\n};\n\nexport default withStyles(styles)(ModuleSettings);\n","import React, { Fragment } from \"react\";\nimport { CssBaseline, withStyles } from \"@material-ui/core\";\n\nimport AppHeader from \"./components/AppHeader\";\nimport ModuleSettings from \"./pages/ModuleSettings.js\";\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\n\nconst Alarms = () => <h2>Alarms will go here</h2>;\n\nconst styles = theme => ({\n  main: {\n    padding: 3 * theme.spacing.unit,\n    [theme.breakpoints.down(\"xs\")]: {\n      padding: 2 * theme.spacing.unit\n    }\n  }\n});\n\nconst App = ({ classes }) => (\n  <Router>\n    <Fragment>\n      <CssBaseline />\n      <AppHeader />\n      <main className={classes.main}>\n        <Route path=\"/\" exact component={ModuleSettings} />\n        <Route path=\"/alarms\" exact component={Alarms} />\n      </main>\n    </Fragment>\n  </Router>\n);\n\nexport default withStyles(styles)(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            \"This web app is being served cache-first by a service \" +\n              \"worker. To learn more, visit http://bit.ly/CRA-PWA\"\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                \"New content is available and will be used when all \" +\n                  \"tabs for this page are closed. See http://bit.ly/CRA-PWA.\"\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\");\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get(\"content-type\");\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf(\"javascript\") === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\"\n      );\n    });\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n\nif (module.hot) module.hot.accept();\n"],"sourceRoot":""}